import{_ as a,c as e,a6 as n,j as t,a as l,o as u}from"./chunks/framework.dnLRFVS3.js";const g=JSON.parse('{"title":"统一支付接口","description":"","frontmatter":{},"headers":[],"relativePath":"multi/gateway/interface/payment/统一支付接口.md","filePath":"multi/gateway/interface/payment/统一支付接口.md","lastUpdated":1744020261000}'),r={name:"multi/gateway/interface/payment/统一支付接口.md"};function i(s,d,h,o,c,p){return u(),e("div",null,d[0]||(d[0]=[n('<h1 id="统一支付接口" tabindex="-1">统一支付接口 <a class="header-anchor" href="#统一支付接口">¶</a></h1><div class="tip custom-block"><p class="custom-block-title">提示</p><p>业务系统通过下单接口发起收款，网关会根据系统中的配置和业务系统传输的参数，选择的对应的支付通道和支付方式发起下单请求。 同时网关根据不同的支付方式返回对应发起支付使用的参数，业务系统使用该参数参数来调起支付。</p></div><h2 id="接口说明" tabindex="-1">接口说明 <a class="header-anchor" href="#接口说明">¶</a></h2><table tabindex="0"><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>请求URL</td><td><code>/unipay/pay</code></td></tr><tr><td>请求方式</td><td><code>POST</code></td></tr><tr><td>请求类型</td><td><code>application/json</code></td></tr></tbody></table><h2 id="请求参数" tabindex="-1">请求参数 <a class="header-anchor" href="#请求参数">¶</a></h2><h3 id="业务参数" tabindex="-1">业务参数 <a class="header-anchor" href="#业务参数">¶</a></h3><div class="tip custom-block"><p class="custom-block-title">提示</p><p>设置参数时，不要忘了设置公共请求参数<a href="./../overview/调用说明.html">调用说明</a>，未做特殊说明所有接口都需要传输</p></div>',7),t("table",{tabindex:"0"},[t("thead",null,[t("tr",null,[t("th",null,[l("字段名"),t("img",{width:"70/"})]),t("th",null,"变量名"),t("th",null,"必填"),t("th",null,"类型"),t("th",null,"长度"),t("th",null,"示例值"),t("th",null,[l("描述"),t("img",{width:"200/"})])])]),t("tbody",null,[t("tr",null,[t("td",null,"商户订单号"),t("td",null,"bizOrderNo"),t("td",null,"是"),t("td",null,"String"),t("td",null,"100"),t("td",null,"123"),t("td",null,"支付时客户系统传输的业务单号，需要保证唯一，可以为字符文字组合，不要包含特殊符号，订单号不可重复")]),t("tr",null,[t("td",null,"支付标题"),t("td",null,"title"),t("td",null,"是"),t("td",null,"String"),t("td",null,"100"),t("td",null,"测试支付"),t("td")]),t("tr",null,[t("td",null,"支付描述"),t("td",null,"description"),t("td",null,"否"),t("td",null,"String"),t("td",null,"500"),t("td",null,"测试支付的描述"),t("td")]),t("tr",null,[t("td",null,"开启分账"),t("td",null,"allocation"),t("td",null,"否"),t("td",null,"Boolean"),t("td"),t("td",null,"true"),t("td",null,"订单是否允许分账，不传输为不开启")]),t("tr",null,[t("td",null,"开启自动分账"),t("td",null,"autoAllocation"),t("td",null,"否"),t("td",null,"Boolean"),t("td"),t("td",null,"false"),t("td",null,"是否自动对支付订单进行分账，需要开启分账字段为true才会生效")]),t("tr",null,[t("td",null,"过期时间"),t("td",null,"expiredTime"),t("td",null,"否"),t("td",null,"Long"),t("td"),t("td",null,"2024-10-24 12:00:00"),t("td",null,"订单过期时间，格式为yyyy-MM-dd HH:mm:ss，不传输为默认值，默认为当前时间往后加24小时。")]),t("tr",null,[t("td",null,"支付通道"),t("td",null,"channel"),t("td",null,"是"),t("td",null,"String"),t("td",null,"20"),t("td",null,"ali_pay"),t("td",null,[l("要进行支付的通道编码，如微信支付、支付宝支付等。见常量和状态表"),t("a",{href:"/single/guides/other/常量和状态表.html"},"支付通道"),l("相关的描述")])]),t("tr",null,[t("td",null,"支付方式"),t("td",null,"method"),t("td",null,"是"),t("td",null,"String"),t("td",null,"20"),t("td",null,"qrcode"),t("td",null,[l("进行支付的方式编码，如扫码支付、条码支付等。见常量和状态表"),t("a",{href:"/single/guides/other/常量和状态表.html"},"支付方式"),l("相关的描述")])]),t("tr",null,[t("td",null,"其他支付方式"),t("td",null,"otherMethod"),t("td",null,"否"),t("td",null,"String"),t("td",null,"128"),t("td",null,"wx_pub"),t("td",null,[l("只有在 支付方式为其他支付(other)时才会生效，传输各种三四方通道自定义的支付方式。见常量和状态表"),t("a",{href:"/single/guides/other/常量和状态表.html"},"其他支付方式"),l("相关的描述")])]),t("tr",null,[t("td",null,"限制用户支付类型"),t("td",null,"limitPay"),t("td",null,"否"),t("td",null,"String"),t("td",null,"128"),t("td",null,"no_credit"),t("td",null,"限制用户支付类型, 目前支持限制信用卡，部分通道才会有效")]),t("tr",null,[t("td",null,"支付金额"),t("td",null,"amount"),t("td",null,"是"),t("td",null,"BigDecimal"),t("td",null,"8,2"),t("td",null,"10.12"),t("td",null,[l("要进行支付的金额,单位为"),t("strong",null,"元"),l("，保留两位小数，小数buff末尾不可为0")])]),t("tr",null,[t("td",null,"用户标识"),t("td",null,"openId"),t("td",null,"否"),t("td",null,"String"),t("td",null,"128"),t("td",null,"wxgj22ed144df11"),t("td",null,"主要用于Jsapi、小程序支付等需要用户标识才可以支付的场合")]),t("tr",null,[t("td",null,"付款码"),t("td",null,"authCode"),t("td",null,"否"),t("td",null,"String"),t("td",null,"128"),t("td",null,"6117665200152"),t("td",null,"被扫支付方式所需要传输的参数")]),t("tr",null,[t("td",null,"终端设备编码"),t("td",null,"terminalNo"),t("td",null,"否"),t("td",null,"String"),t("td",null,"128"),t("td",null,"Hvbvdfg"),t("td",null,"使用被扫支付方式，部分通道要求传输扫码终端号，此处的设备为在Daxpay中管理并进行报备的终端")]),t("tr",null,[t("td",null,"附加支付参数"),t("td",null,"extraParam"),t("td",null,"否"),t("td",null,"String"),t("td",null,"2048"),t("td",{"authType:sub":""}),t("td",null,"主要用于传输各通道特有的参数数据")]),t("tr",null,[t("td",null,"商户扩展参数"),t("td",null,"attach"),t("td",null,"否"),t("td",null,"String"),t("td",null,"500"),t("td",null,"id=123332"),t("td",null,"商户扩展参数，回调时会原样返回")]),t("tr",null,[t("td",null,"同步请求地址"),t("td",null,"returnUrl"),t("td",null,"否"),t("td",null,"String"),t("td",null,"200"),t("td",null,[t("a",{href:"http://abc.cn/returnCallback",target:"_blank",rel:"noreferrer"},"http://abc.cn/returnCallback")]),t("td",null,"支付完成后，会自动跳转到设置的页面，部分场景下才会生效")]),t("tr",null,[t("td",null,"退出地址"),t("td",null,"quitUrl"),t("td",null,"否"),t("td",null,"String"),t("td",null,"200"),t("td",null,[t("a",{href:"http://abc.com/quit",target:"_blank",rel:"noreferrer"},"http://abc.com/quit")]),t("td",null,"用户付款中途退出返回商户网站的地址(部分支付场景中可用)")]),t("tr",null,[t("td",null,"异步通知地址"),t("td",null,"notifyUrl"),t("td",null,"否"),t("td",null,"String"),t("td",null,"200"),t("td",null,[t("a",{href:"http://abc.cn/noticeCallback",target:"_blank",rel:"noreferrer"},"http://abc.cn/noticeCallback")]),t("td",null,"异步通知地址，用于商户系统接收回调消息通知")])])],-1),n('<h2 id="响应结果" tabindex="-1">响应结果 <a class="header-anchor" href="#响应结果">¶</a></h2><h3 id="业务响应参数" tabindex="-1">业务响应参数 <a class="header-anchor" href="#业务响应参数">¶</a></h3><div class="tip custom-block"><p class="custom-block-title">提示</p><p>业务数据包裹在<code>公共响应参数</code>中的<code>data</code>字段，在<code>code</code>为<code>0</code>时才会有返回数据。</p></div><table tabindex="0"><thead><tr><th>字段名<img width="70/"></th><th>变量名</th><th>必传</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>商户订单号</td><td>bizOrderNo</td><td>是</td><td>String</td><td>1753370980523384832</td><td>发起支付时传输的商户订单号</td></tr><tr><td>订单号</td><td>orderNo</td><td>是</td><td>String</td><td>true</td><td>支付系统生成的支付订单号</td></tr><tr><td>支付状态</td><td>status</td><td>否</td><td>String</td><td>pay_success</td><td>见<a href="/single/guides/other/常量和状态表.html">常量和状态表</a>相关的描述</td></tr><tr><td>支付参数体</td><td>payBody</td><td>否</td><td>String</td><td>weixin://wxpay/bizpayurl?pr=QimHZC7zz</td><td>用于用户终端发起支付请求数据, 需要根据不同的支付通道和支付方式进行处理， 见通道说明</td></tr></tbody></table><h2 id="http请求示例" tabindex="-1">HTTP请求示例 <a class="header-anchor" href="#http请求示例">¶</a></h2><h3 id="请求参数-1" tabindex="-1">请求参数 <a class="header-anchor" href="#请求参数-1">¶</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h3 id="响应参数-成功" tabindex="-1">响应参数(成功) <a class="header-anchor" href="#响应参数-成功">¶</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h3 id="响应参数-失败" tabindex="-1">响应参数(失败) <a class="header-anchor" href="#响应参数-失败">¶</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div><h2 id="sdk请求示例" tabindex="-1">SDK请求示例 <a class="header-anchor" href="#sdk请求示例">¶</a></h2><div class="tip custom-block"><p class="custom-block-title">提示</p><p>使用SDK可以简化接入支付的速度</p></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div>',14)]))}const m=a(r,[["render",i]]);export{g as __pageData,m as default};
